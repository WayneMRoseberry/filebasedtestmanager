{
  "$id": "https://filebasedtestmanager.com/schemas/test-plan-schema.json",
  "title": "Test Plan Schema",
  "description": "Schema for defining test plans within strategies",
  "type": "object",
  "required": ["id", "projectId", "name", "description", "testLevel"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^plan-\\d+$",
      "description": "Unique plan identifier"
    },
    "projectId": {
      "type": "string",
      "pattern": "^proj-\\d+$",
      "description": "Reference to the project"
    },
    "strategyId": {
      "type": "string",
      "pattern": "^strategy-\\d+$",
      "description": "Reference to the test strategy"
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 200,
      "description": "Plan name"
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2000,
      "description": "Plan description"
    },
    "scope": {
      "type": "string",
      "maxLength": 1000,
      "description": "Scope of the test plan"
    },
    "testLevel": {
      "type": "string",
      "enum": ["Unit", "Integration", "System", "Acceptance", "Performance", "Security", "Usability"],
      "description": "Level of testing"
    },
    "estimatedEffort": {
      "type": "string",
      "pattern": "^\\d+\\s*(hours?|days?|weeks?)$",
      "description": "Estimated effort (e.g., '40 hours', '2 weeks')"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "description": "Dependencies for this test plan"
    },
    "risks": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "description": "Identified risks"
    },
    "entryCriteria": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "description": "Entry criteria for testing"
    },
    "exitCriteria": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "description": "Exit criteria for testing"
    },
    "testEnvironment": {
      "type": "string",
      "maxLength": 500,
      "description": "Test environment requirements"
    },
    "environment": {
      "type": "string",
      "maxLength": 500,
      "description": "Testing environment"
    },
    "startDate": {
      "type": "string",
      "format": "date",
      "description": "Planned start date for the test plan"
    },
    "endDate": {
      "type": "string",
      "format": "date",
      "description": "Planned end date for the test plan"
    },
    "effortEstimation": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "integer",
          "minimum": 0
        },
        "days": {
          "type": "integer",
          "minimum": 0
        }
      },
      "description": "Estimated effort for the test plan"
    },
    "testData": {
      "type": "string",
      "maxLength": 500,
      "description": "Test data requirements"
    },
    "status": {
      "type": "string",
      "enum": ["draft", "review", "approved", "active", "completed"],
      "default": "draft",
      "description": "Plan status"
    },
    "createdBy": {
      "type": "string",
      "minLength": 1,
      "description": "Creator of the plan"
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Creation timestamp"
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp"
    },
    "version": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "description": "Version of the test plan (semver)"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": true,
      "description": "Additional metadata for the test plan"
    }
  },
  "additionalProperties": false
}
